

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace IN4MDatabase
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class iN4MEntities : DbContext
{
    public iN4MEntities()
        : base("name=iN4MEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<AssetAttibute> AssetAttibutes { get; set; }

    public virtual DbSet<AssetGroup> AssetGroups { get; set; }

    public virtual DbSet<Asset> Assets { get; set; }

    public virtual DbSet<BillOfQuantity> BillOfQuantities { get; set; }

    public virtual DbSet<Building> Buildings { get; set; }

    public virtual DbSet<Campu> Campus { get; set; }

    public virtual DbSet<ComponentAttibute> ComponentAttibutes { get; set; }

    public virtual DbSet<ComponentFinance> ComponentFinances { get; set; }

    public virtual DbSet<ComponentInspection> ComponentInspections { get; set; }

    public virtual DbSet<Component> Components { get; set; }

    public virtual DbSet<Department> Departments { get; set; }

    public virtual DbSet<Floor> Floors { get; set; }

    public virtual DbSet<Hierarchy> Hierarchies { get; set; }

    public virtual DbSet<Labour> Labours { get; set; }

    public virtual DbSet<Location> Locations { get; set; }

    public virtual DbSet<LookupInspectionPriority> LookupInspectionPriorities { get; set; }

    public virtual DbSet<LookupInspectionStatu> LookupInspectionStatus { get; set; }

    public virtual DbSet<LookupWorkOrderPriority> LookupWorkOrderPriorities { get; set; }

    public virtual DbSet<LookupWorkOrderStatu> LookupWorkOrderStatus { get; set; }

    public virtual DbSet<Material> Materials { get; set; }

    public virtual DbSet<Organisation> Organisations { get; set; }

    public virtual DbSet<PerformanceMeasure> PerformanceMeasures { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<Room> Rooms { get; set; }

    public virtual DbSet<SetupHierarchy> SetupHierarchies { get; set; }

    public virtual DbSet<Staff> Staffs { get; set; }

    public virtual DbSet<Supplier> Suppliers { get; set; }

    public virtual DbSet<Treatment> Treatments { get; set; }

    public virtual DbSet<WorkOrder> WorkOrders { get; set; }

    public virtual DbSet<COMPONENT_FINANCE_ARCHIVE> COMPONENT_FINANCE_ARCHIVE { get; set; }

    public virtual DbSet<V_4CAST_IMPORT> V_4CAST_IMPORT { get; set; }

    public virtual DbSet<V_COMPONENTS> V_COMPONENTS { get; set; }

    public virtual DbSet<LookupLifecycleName> LookupLifecycleNames { get; set; }

    public virtual DbSet<LookupTreatType> LookupTreatTypes { get; set; }

    public virtual DbSet<Credential> Credentials { get; set; }

    public virtual DbSet<V_COMPONENT_FINANCE> V_COMPONENT_FINANCE { get; set; }


    public virtual int SP_DELETE_FINANCE_ARCHIVE()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_FINANCE_ARCHIVE");
    }


    public virtual int SP_FINANCE_ARCHIVE()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FINANCE_ARCHIVE");
    }


    public virtual int SP_UnitRate_Refresh()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UnitRate_Refresh");
    }


    public virtual int SP_UPDATE_COMPONENT_FIN_UNITRATE()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_COMPONENT_FIN_UNITRATE");
    }


    public virtual ObjectResult<SpGetDashBordData_Result1> SpGetDashBordData()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetDashBordData_Result1>("SpGetDashBordData");
    }


    public virtual ObjectResult<string> SpGetAssetsTypeAgainstLocation(string loc)
    {

        var locParameter = loc != null ?
            new ObjectParameter("Loc", loc) :
            new ObjectParameter("Loc", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetAssetsTypeAgainstLocation", locParameter);
    }


    public virtual ObjectResult<SpGetAssets_Result> SpGetAssets(string type)
    {

        var typeParameter = type != null ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAssets_Result>("SpGetAssets", typeParameter);
    }


    public virtual ObjectResult<SpGetBeforeFilterationData_Result> SpGetBeforeFilterationData()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetBeforeFilterationData_Result>("SpGetBeforeFilterationData");
    }


    public virtual ObjectResult<SpGetAfterFilter_Result> SpGetAfterFilter(string filter)
    {

        var filterParameter = filter != null ?
            new ObjectParameter("filter", filter) :
            new ObjectParameter("filter", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAfterFilter_Result>("SpGetAfterFilter", filterParameter);
    }


    public virtual ObjectResult<Nullable<int>> SpAddComponent(string comName, string comDis, string assName, string iDate, string dDate, string material, string util, string eExpo, string comcat, string comF)
    {

        var comNameParameter = comName != null ?
            new ObjectParameter("ComName", comName) :
            new ObjectParameter("ComName", typeof(string));


        var comDisParameter = comDis != null ?
            new ObjectParameter("ComDis", comDis) :
            new ObjectParameter("ComDis", typeof(string));


        var assNameParameter = assName != null ?
            new ObjectParameter("AssName", assName) :
            new ObjectParameter("AssName", typeof(string));


        var iDateParameter = iDate != null ?
            new ObjectParameter("IDate", iDate) :
            new ObjectParameter("IDate", typeof(string));


        var dDateParameter = dDate != null ?
            new ObjectParameter("DDate", dDate) :
            new ObjectParameter("DDate", typeof(string));


        var materialParameter = material != null ?
            new ObjectParameter("Material", material) :
            new ObjectParameter("Material", typeof(string));


        var utilParameter = util != null ?
            new ObjectParameter("Util", util) :
            new ObjectParameter("Util", typeof(string));


        var eExpoParameter = eExpo != null ?
            new ObjectParameter("EExpo", eExpo) :
            new ObjectParameter("EExpo", typeof(string));


        var comcatParameter = comcat != null ?
            new ObjectParameter("Comcat", comcat) :
            new ObjectParameter("Comcat", typeof(string));


        var comFParameter = comF != null ?
            new ObjectParameter("ComF", comF) :
            new ObjectParameter("ComF", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpAddComponent", comNameParameter, comDisParameter, assNameParameter, iDateParameter, dDateParameter, materialParameter, utilParameter, eExpoParameter, comcatParameter, comFParameter);
    }


    public virtual ObjectResult<Nullable<int>> SpCreateLocation(string camp, string building, string floor, string rom)
    {

        var campParameter = camp != null ?
            new ObjectParameter("Camp", camp) :
            new ObjectParameter("Camp", typeof(string));


        var buildingParameter = building != null ?
            new ObjectParameter("Building", building) :
            new ObjectParameter("Building", typeof(string));


        var floorParameter = floor != null ?
            new ObjectParameter("Floor", floor) :
            new ObjectParameter("Floor", typeof(string));


        var romParameter = rom != null ?
            new ObjectParameter("Rom", rom) :
            new ObjectParameter("Rom", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpCreateLocation", campParameter, buildingParameter, floorParameter, romParameter);
    }


    public virtual ObjectResult<Nullable<int>> spCreateStaff(string stafname, string staffDisc, string department, string roll, string contact)
    {

        var stafnameParameter = stafname != null ?
            new ObjectParameter("stafname", stafname) :
            new ObjectParameter("stafname", typeof(string));


        var staffDiscParameter = staffDisc != null ?
            new ObjectParameter("staffDisc", staffDisc) :
            new ObjectParameter("staffDisc", typeof(string));


        var departmentParameter = department != null ?
            new ObjectParameter("Department", department) :
            new ObjectParameter("Department", typeof(string));


        var rollParameter = roll != null ?
            new ObjectParameter("Roll", roll) :
            new ObjectParameter("Roll", typeof(string));


        var contactParameter = contact != null ?
            new ObjectParameter("contact", contact) :
            new ObjectParameter("contact", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spCreateStaff", stafnameParameter, staffDiscParameter, departmentParameter, rollParameter, contactParameter);
    }


    public virtual ObjectResult<SpGetMaterialOfTreatment_Result1> SpGetMaterialOfTreatment(string treatid)
    {

        var treatidParameter = treatid != null ?
            new ObjectParameter("treatid", treatid) :
            new ObjectParameter("treatid", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetMaterialOfTreatment_Result1>("SpGetMaterialOfTreatment", treatidParameter);
    }


    public virtual ObjectResult<spGetTreamtneInfo_Result2> spGetTreamtneInfo()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetTreamtneInfo_Result2>("spGetTreamtneInfo");
    }


    public virtual ObjectResult<SpGetSupplierInfo_Result> SpGetSupplierInfo(string treatid)
    {

        var treatidParameter = treatid != null ?
            new ObjectParameter("treatid", treatid) :
            new ObjectParameter("treatid", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetSupplierInfo_Result>("SpGetSupplierInfo", treatidParameter);
    }


    public virtual ObjectResult<Nullable<int>> SpCreateTreatment(string tname, string tDisc, string supplierName, string billqtyName, string tUR, string tType)
    {

        var tnameParameter = tname != null ?
            new ObjectParameter("tname", tname) :
            new ObjectParameter("tname", typeof(string));


        var tDiscParameter = tDisc != null ?
            new ObjectParameter("tDisc", tDisc) :
            new ObjectParameter("tDisc", typeof(string));


        var supplierNameParameter = supplierName != null ?
            new ObjectParameter("SupplierName", supplierName) :
            new ObjectParameter("SupplierName", typeof(string));


        var billqtyNameParameter = billqtyName != null ?
            new ObjectParameter("billqtyName", billqtyName) :
            new ObjectParameter("billqtyName", typeof(string));


        var tURParameter = tUR != null ?
            new ObjectParameter("tUR", tUR) :
            new ObjectParameter("tUR", typeof(string));


        var tTypeParameter = tType != null ?
            new ObjectParameter("tType", tType) :
            new ObjectParameter("tType", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpCreateTreatment", tnameParameter, tDiscParameter, supplierNameParameter, billqtyNameParameter, tURParameter, tTypeParameter);
    }


    public virtual ObjectResult<SpGetEditTreatmentData_Result> SpGetEditTreatmentData(string iD)
    {

        var iDParameter = iD != null ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditTreatmentData_Result>("SpGetEditTreatmentData", iDParameter);
    }


    public virtual ObjectResult<Nullable<int>> SpUpdateTreatment(string treatID, string tname, string tDisc, string supplierName, string billqtyName, string tUR, string tType)
    {

        var treatIDParameter = treatID != null ?
            new ObjectParameter("treatID", treatID) :
            new ObjectParameter("treatID", typeof(string));


        var tnameParameter = tname != null ?
            new ObjectParameter("tname", tname) :
            new ObjectParameter("tname", typeof(string));


        var tDiscParameter = tDisc != null ?
            new ObjectParameter("tDisc", tDisc) :
            new ObjectParameter("tDisc", typeof(string));


        var supplierNameParameter = supplierName != null ?
            new ObjectParameter("SupplierName", supplierName) :
            new ObjectParameter("SupplierName", typeof(string));


        var billqtyNameParameter = billqtyName != null ?
            new ObjectParameter("billqtyName", billqtyName) :
            new ObjectParameter("billqtyName", typeof(string));


        var tURParameter = tUR != null ?
            new ObjectParameter("tUR", tUR) :
            new ObjectParameter("tUR", typeof(string));


        var tTypeParameter = tType != null ?
            new ObjectParameter("tType", tType) :
            new ObjectParameter("tType", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpUpdateTreatment", treatIDParameter, tnameParameter, tDiscParameter, supplierNameParameter, billqtyNameParameter, tURParameter, tTypeParameter);
    }


    public virtual ObjectResult<spGetLocation_Result1> spGetLocation()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetLocation_Result1>("spGetLocation");
    }


    public virtual ObjectResult<spGetWorkOrderFilters_Result> spGetWorkOrderFilters(string status, string perioerties)
    {

        var statusParameter = status != null ?
            new ObjectParameter("status", status) :
            new ObjectParameter("status", typeof(string));


        var perioertiesParameter = perioerties != null ?
            new ObjectParameter("perioerties", perioerties) :
            new ObjectParameter("perioerties", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetWorkOrderFilters_Result>("spGetWorkOrderFilters", statusParameter, perioertiesParameter);
    }


    public virtual ObjectResult<SpGetWorkOrderInfo_Result> SpGetWorkOrderInfo(string id)
    {

        var idParameter = id != null ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetWorkOrderInfo_Result>("SpGetWorkOrderInfo", idParameter);
    }


    public virtual ObjectResult<spGetInceptionData_Result1> spGetInceptionData()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetInceptionData_Result1>("spGetInceptionData");
    }


    public virtual ObjectResult<SpGetInceptionDetails_Result> SpGetInceptionDetails(string id)
    {

        var idParameter = id != null ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetInceptionDetails_Result>("SpGetInceptionDetails", idParameter);
    }


    public virtual ObjectResult<Nullable<int>> SpCreateInception(string iName, string iDsic, string iNote, string iCreDate, string iCloDate, string tName, string cName, string sName, string iper, string istatus, string wOrder)
    {

        var iNameParameter = iName != null ?
            new ObjectParameter("IName", iName) :
            new ObjectParameter("IName", typeof(string));


        var iDsicParameter = iDsic != null ?
            new ObjectParameter("IDsic", iDsic) :
            new ObjectParameter("IDsic", typeof(string));


        var iNoteParameter = iNote != null ?
            new ObjectParameter("INote", iNote) :
            new ObjectParameter("INote", typeof(string));


        var iCreDateParameter = iCreDate != null ?
            new ObjectParameter("ICreDate", iCreDate) :
            new ObjectParameter("ICreDate", typeof(string));


        var iCloDateParameter = iCloDate != null ?
            new ObjectParameter("ICloDate", iCloDate) :
            new ObjectParameter("ICloDate", typeof(string));


        var tNameParameter = tName != null ?
            new ObjectParameter("tName", tName) :
            new ObjectParameter("tName", typeof(string));


        var cNameParameter = cName != null ?
            new ObjectParameter("CName", cName) :
            new ObjectParameter("CName", typeof(string));


        var sNameParameter = sName != null ?
            new ObjectParameter("SName", sName) :
            new ObjectParameter("SName", typeof(string));


        var iperParameter = iper != null ?
            new ObjectParameter("Iper", iper) :
            new ObjectParameter("Iper", typeof(string));


        var istatusParameter = istatus != null ?
            new ObjectParameter("Istatus", istatus) :
            new ObjectParameter("Istatus", typeof(string));


        var wOrderParameter = wOrder != null ?
            new ObjectParameter("WOrder", wOrder) :
            new ObjectParameter("WOrder", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpCreateInception", iNameParameter, iDsicParameter, iNoteParameter, iCreDateParameter, iCloDateParameter, tNameParameter, cNameParameter, sNameParameter, iperParameter, istatusParameter, wOrderParameter);
    }


    public virtual ObjectResult<Nullable<int>> spCreateNewWorkOrder(string inspectionID, string wOName, string wODisc, string wOstatus, string cDate, string comDate, string wOEstCost, string wOActCost, string dPercen, string tWOEC, string wOPer)
    {

        var inspectionIDParameter = inspectionID != null ?
            new ObjectParameter("InspectionID", inspectionID) :
            new ObjectParameter("InspectionID", typeof(string));


        var wONameParameter = wOName != null ?
            new ObjectParameter("WOName", wOName) :
            new ObjectParameter("WOName", typeof(string));


        var wODiscParameter = wODisc != null ?
            new ObjectParameter("WODisc", wODisc) :
            new ObjectParameter("WODisc", typeof(string));


        var wOstatusParameter = wOstatus != null ?
            new ObjectParameter("WOstatus", wOstatus) :
            new ObjectParameter("WOstatus", typeof(string));


        var cDateParameter = cDate != null ?
            new ObjectParameter("CDate", cDate) :
            new ObjectParameter("CDate", typeof(string));


        var comDateParameter = comDate != null ?
            new ObjectParameter("ComDate", comDate) :
            new ObjectParameter("ComDate", typeof(string));


        var wOEstCostParameter = wOEstCost != null ?
            new ObjectParameter("WOEstCost", wOEstCost) :
            new ObjectParameter("WOEstCost", typeof(string));


        var wOActCostParameter = wOActCost != null ?
            new ObjectParameter("WOActCost", wOActCost) :
            new ObjectParameter("WOActCost", typeof(string));


        var dPercenParameter = dPercen != null ?
            new ObjectParameter("DPercen", dPercen) :
            new ObjectParameter("DPercen", typeof(string));


        var tWOECParameter = tWOEC != null ?
            new ObjectParameter("TWOEC", tWOEC) :
            new ObjectParameter("TWOEC", typeof(string));


        var wOPerParameter = wOPer != null ?
            new ObjectParameter("WOPer", wOPer) :
            new ObjectParameter("WOPer", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spCreateNewWorkOrder", inspectionIDParameter, wONameParameter, wODiscParameter, wOstatusParameter, cDateParameter, comDateParameter, wOEstCostParameter, wOActCostParameter, dPercenParameter, tWOECParameter, wOPerParameter);
    }


    public virtual int spUpdateInspection(string iID, string woID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        var woIDParameter = woID != null ?
            new ObjectParameter("WoID", woID) :
            new ObjectParameter("WoID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateInspection", iIDParameter, woIDParameter);
    }


    public virtual ObjectResult<string> ComboInspecPeriority(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ComboInspecPeriority", iIDParameter);
    }


    public virtual ObjectResult<string> ComboInspecStatus(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ComboInspecStatus", iIDParameter);
    }


    public virtual ObjectResult<string> ComboInspectionBuilding(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ComboInspectionBuilding", iIDParameter);
    }


    public virtual ObjectResult<string> ComboInspectionCampus(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ComboInspectionCampus", iIDParameter);
    }


    public virtual ObjectResult<string> ComboInspectionComponentName(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ComboInspectionComponentName", iIDParameter);
    }


    public virtual ObjectResult<string> ComboInspectionFloor(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ComboInspectionFloor", iIDParameter);
    }


    public virtual ObjectResult<string> ComboInspectionRoom(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ComboInspectionRoom", iIDParameter);
    }


    public virtual ObjectResult<SpWorkerGenral_Result> SpWorkerGenral(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpWorkerGenral_Result>("SpWorkerGenral", iIDParameter);
    }


    public virtual ObjectResult<AttributeGeneral_Result> AttributeGeneral(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AttributeGeneral_Result>("AttributeGeneral", iIDParameter);
    }


    public virtual ObjectResult<string> SpAttribTreat(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpAttribTreat", iIDParameter);
    }


    public virtual ObjectResult<string> PerforAppearenceScore(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PerforAppearenceScore", iIDParameter);
    }


    public virtual ObjectResult<Nullable<decimal>> PerforConditionScore(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("PerforConditionScore", iIDParameter);
    }


    public virtual ObjectResult<PerforGeneral_Result> PerforGeneral(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PerforGeneral_Result>("PerforGeneral", iIDParameter);
    }


    public virtual ObjectResult<SpInspectionTreatment_Result> SpInspectionTreatment(string iID)
    {

        var iIDParameter = iID != null ?
            new ObjectParameter("IID", iID) :
            new ObjectParameter("IID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpInspectionTreatment_Result>("SpInspectionTreatment", iIDParameter);
    }


    public virtual ObjectResult<spGetOnlyAssestAndLoc_Result> spGetOnlyAssestAndLoc()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetOnlyAssestAndLoc_Result>("spGetOnlyAssestAndLoc");
    }


    public virtual ObjectResult<SpLoadInitialInfo_Result> SpLoadInitialInfo()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpLoadInitialInfo_Result>("SpLoadInitialInfo");
    }


    public virtual ObjectResult<Nullable<int>> spOverDueInspection()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spOverDueInspection");
    }


    public virtual ObjectResult<Nullable<int>> SpOverDueWorkOrder()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpOverDueWorkOrder");
    }


    public virtual ObjectResult<Nullable<int>> SpActiveInspections()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpActiveInspections");
    }


    public virtual ObjectResult<Nullable<int>> spActiveWorkOrders()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spActiveWorkOrders");
    }


    public virtual ObjectResult<spGetOnlyAssestInfo_Result> spGetOnlyAssestInfo()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetOnlyAssestInfo_Result>("spGetOnlyAssestInfo");
    }


    public virtual ObjectResult<Nullable<int>> SpAuthenticateUser(string usernamr, string password)
    {

        var usernamrParameter = usernamr != null ?
            new ObjectParameter("Usernamr", usernamr) :
            new ObjectParameter("Usernamr", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpAuthenticateUser", usernamrParameter, passwordParameter);
    }


    public virtual ObjectResult<SpGetComponent_Result> SpGetComponent(string assID)
    {

        var assIDParameter = assID != null ?
            new ObjectParameter("AssID", assID) :
            new ObjectParameter("AssID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetComponent_Result>("SpGetComponent", assIDParameter);
    }


    public virtual ObjectResult<SpgetAssCompoAttrib_Result> SpgetAssCompoAttrib(string compiID)
    {

        var compiIDParameter = compiID != null ?
            new ObjectParameter("CompiID", compiID) :
            new ObjectParameter("CompiID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpgetAssCompoAttrib_Result>("SpgetAssCompoAttrib", compiIDParameter);
    }


    public virtual ObjectResult<SpGetAssCompoFinance_Result> SpGetAssCompoFinance(string compoID)
    {

        var compoIDParameter = compoID != null ?
            new ObjectParameter("CompoID", compoID) :
            new ObjectParameter("CompoID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAssCompoFinance_Result>("SpGetAssCompoFinance", compoIDParameter);
    }


    public virtual ObjectResult<SpGetAssCompoPerfor_Result> SpGetAssCompoPerfor(string compoID)
    {

        var compoIDParameter = compoID != null ?
            new ObjectParameter("CompoID", compoID) :
            new ObjectParameter("CompoID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAssCompoPerfor_Result>("SpGetAssCompoPerfor", compoIDParameter);
    }


    public virtual ObjectResult<string> SpGetCompanyInfo()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetCompanyInfo");
    }


    public virtual ObjectResult<SpGetLookUpWorkOrder_Result> SpGetLookUpWorkOrder()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetLookUpWorkOrder_Result>("SpGetLookUpWorkOrder");
    }


    public virtual ObjectResult<SpgetLookupworkOrderPerioerty_Result> SpgetLookupworkOrderPerioerty()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpgetLookupworkOrderPerioerty_Result>("SpgetLookupworkOrderPerioerty");
    }


    public virtual ObjectResult<SpgetLookupInspectionPeriortiy_Result> SpgetLookupInspectionPeriortiy()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpgetLookupInspectionPeriortiy_Result>("SpgetLookupInspectionPeriortiy");
    }


    public virtual ObjectResult<SpGetLookUpInspectionStatus_Result> SpGetLookUpInspectionStatus()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetLookUpInspectionStatus_Result>("SpGetLookUpInspectionStatus");
    }


    public virtual ObjectResult<SpGetWorkOrderEssentialInfo_Result> SpGetWorkOrderEssentialInfo()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetWorkOrderEssentialInfo_Result>("SpGetWorkOrderEssentialInfo");
    }


    public virtual ObjectResult<SpGetStaff_Result1> SpGetStaff()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetStaff_Result1>("SpGetStaff");
    }


    public virtual ObjectResult<SpFilterInspection_Result2> SpFilterInspection(string iStatus)
    {

        var iStatusParameter = iStatus != null ?
            new ObjectParameter("IStatus", iStatus) :
            new ObjectParameter("IStatus", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpFilterInspection_Result2>("SpFilterInspection", iStatusParameter);
    }


    public virtual ObjectResult<SpGetEditLocationData_Result> SpGetEditLocationData(string iD)
    {

        var iDParameter = iD != null ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditLocationData_Result>("SpGetEditLocationData", iDParameter);
    }


    public virtual ObjectResult<Nullable<int>> SpUpdateLocation(string locationID, string campus, string building, string floor, string room)
    {

        var locationIDParameter = locationID != null ?
            new ObjectParameter("LocationID", locationID) :
            new ObjectParameter("LocationID", typeof(string));


        var campusParameter = campus != null ?
            new ObjectParameter("Campus", campus) :
            new ObjectParameter("Campus", typeof(string));


        var buildingParameter = building != null ?
            new ObjectParameter("Building", building) :
            new ObjectParameter("Building", typeof(string));


        var floorParameter = floor != null ?
            new ObjectParameter("Floor", floor) :
            new ObjectParameter("Floor", typeof(string));


        var roomParameter = room != null ?
            new ObjectParameter("Room", room) :
            new ObjectParameter("Room", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpUpdateLocation", locationIDParameter, campusParameter, buildingParameter, floorParameter, roomParameter);
    }


    public virtual ObjectResult<SpGetEditStaffData_Result> SpGetEditStaffData(string iD)
    {

        var iDParameter = iD != null ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditStaffData_Result>("SpGetEditStaffData", iDParameter);
    }


    public virtual ObjectResult<SpGetEditStaff_Result> SpGetEditStaff(string stffID)
    {

        var stffIDParameter = stffID != null ?
            new ObjectParameter("StffID", stffID) :
            new ObjectParameter("StffID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetEditStaff_Result>("SpGetEditStaff", stffIDParameter);
    }


    public virtual ObjectResult<Nullable<int>> SpUpdateAssets(string assetsID, string assetName, string assetDesc, string assetsGroup, string camp, string building, string floor, string room, string instaDate, string disposalDate)
    {

        var assetsIDParameter = assetsID != null ?
            new ObjectParameter("AssetsID", assetsID) :
            new ObjectParameter("AssetsID", typeof(string));


        var assetNameParameter = assetName != null ?
            new ObjectParameter("AssetName", assetName) :
            new ObjectParameter("AssetName", typeof(string));


        var assetDescParameter = assetDesc != null ?
            new ObjectParameter("AssetDesc", assetDesc) :
            new ObjectParameter("AssetDesc", typeof(string));


        var assetsGroupParameter = assetsGroup != null ?
            new ObjectParameter("AssetsGroup", assetsGroup) :
            new ObjectParameter("AssetsGroup", typeof(string));


        var campParameter = camp != null ?
            new ObjectParameter("Camp", camp) :
            new ObjectParameter("Camp", typeof(string));


        var buildingParameter = building != null ?
            new ObjectParameter("Building", building) :
            new ObjectParameter("Building", typeof(string));


        var floorParameter = floor != null ?
            new ObjectParameter("Floor", floor) :
            new ObjectParameter("Floor", typeof(string));


        var roomParameter = room != null ?
            new ObjectParameter("Room", room) :
            new ObjectParameter("Room", typeof(string));


        var instaDateParameter = instaDate != null ?
            new ObjectParameter("instaDate", instaDate) :
            new ObjectParameter("instaDate", typeof(string));


        var disposalDateParameter = disposalDate != null ?
            new ObjectParameter("DisposalDate", disposalDate) :
            new ObjectParameter("DisposalDate", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpUpdateAssets", assetsIDParameter, assetNameParameter, assetDescParameter, assetsGroupParameter, campParameter, buildingParameter, floorParameter, roomParameter, instaDateParameter, disposalDateParameter);
    }


    public virtual ObjectResult<Nullable<int>> SpAddAssets(string assetName, string assetDesc, string assetsGroup, string camp, string building, string floor, string room, string instaDate, string disposalDate)
    {

        var assetNameParameter = assetName != null ?
            new ObjectParameter("AssetName", assetName) :
            new ObjectParameter("AssetName", typeof(string));


        var assetDescParameter = assetDesc != null ?
            new ObjectParameter("AssetDesc", assetDesc) :
            new ObjectParameter("AssetDesc", typeof(string));


        var assetsGroupParameter = assetsGroup != null ?
            new ObjectParameter("AssetsGroup", assetsGroup) :
            new ObjectParameter("AssetsGroup", typeof(string));


        var campParameter = camp != null ?
            new ObjectParameter("Camp", camp) :
            new ObjectParameter("Camp", typeof(string));


        var buildingParameter = building != null ?
            new ObjectParameter("Building", building) :
            new ObjectParameter("Building", typeof(string));


        var floorParameter = floor != null ?
            new ObjectParameter("Floor", floor) :
            new ObjectParameter("Floor", typeof(string));


        var roomParameter = room != null ?
            new ObjectParameter("Room", room) :
            new ObjectParameter("Room", typeof(string));


        var instaDateParameter = instaDate != null ?
            new ObjectParameter("instaDate", instaDate) :
            new ObjectParameter("instaDate", typeof(string));


        var disposalDateParameter = disposalDate != null ?
            new ObjectParameter("DisposalDate", disposalDate) :
            new ObjectParameter("DisposalDate", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpAddAssets", assetNameParameter, assetDescParameter, assetsGroupParameter, campParameter, buildingParameter, floorParameter, roomParameter, instaDateParameter, disposalDateParameter);
    }


    public virtual ObjectResult<Nullable<int>> SpCreateComponent(string comName, string comDis, string assid, string iDate, string dDate, string material, string util, string eExpo, string comcat, string comF)
    {

        var comNameParameter = comName != null ?
            new ObjectParameter("ComName", comName) :
            new ObjectParameter("ComName", typeof(string));


        var comDisParameter = comDis != null ?
            new ObjectParameter("ComDis", comDis) :
            new ObjectParameter("ComDis", typeof(string));


        var assidParameter = assid != null ?
            new ObjectParameter("Assid", assid) :
            new ObjectParameter("Assid", typeof(string));


        var iDateParameter = iDate != null ?
            new ObjectParameter("IDate", iDate) :
            new ObjectParameter("IDate", typeof(string));


        var dDateParameter = dDate != null ?
            new ObjectParameter("DDate", dDate) :
            new ObjectParameter("DDate", typeof(string));


        var materialParameter = material != null ?
            new ObjectParameter("Material", material) :
            new ObjectParameter("Material", typeof(string));


        var utilParameter = util != null ?
            new ObjectParameter("Util", util) :
            new ObjectParameter("Util", typeof(string));


        var eExpoParameter = eExpo != null ?
            new ObjectParameter("EExpo", eExpo) :
            new ObjectParameter("EExpo", typeof(string));


        var comcatParameter = comcat != null ?
            new ObjectParameter("Comcat", comcat) :
            new ObjectParameter("Comcat", typeof(string));


        var comFParameter = comF != null ?
            new ObjectParameter("ComF", comF) :
            new ObjectParameter("ComF", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SpCreateComponent", comNameParameter, comDisParameter, assidParameter, iDateParameter, dDateParameter, materialParameter, utilParameter, eExpoParameter, comcatParameter, comFParameter);
    }

}

}

